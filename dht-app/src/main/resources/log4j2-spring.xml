<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<configuration status="INFO" monitorInterval="30">
    <!--<contextName>log4j2</contextName>-->
    <properties>
        <!--${sys:catalina.home}表示linux中环境变量中的tomcat根目录 用户主目录-->
        <!--原来用logback时候在统一配置中心也配置一个logging.path=/opt/tomcat-log/${spring.application.name}   LOG_PATH是内置变量-->
        <!--${sys:user.home}  用户主目录-->
        <Property name="log_path">../logs/dht-log</Property>
        <!-- 保留日志天数 D H M S 分别对应天 小时 分钟 秒 -->
        <property name="KEEP_LOG_DAY">60D</property>
        <!-- 日志切割的最小单位 -->
        <property name="EVERY_FILE_SIZE">20M</property>
        <Property name="log_suffix">log</Property>

    </properties>
    <!--先定义所有的appender -->
    <appenders>
        <console name="Console" target="SYSTEM_OUT">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--输出日志的格式 [%X{X-B3-TraceId},%X{X-B3-SpanId},%X{X-B3-ParentSpanId},%X{X-Span-Export}] -->
            <PatternLayout charset="UTF-8" pattern="[%d][%p][%t][%X{traceId}][%C:%L] %m%n"/>
        </console>

        <RollingFile name="test" fileName="${log_path}/test.${log_suffix}"
                     filePattern="${log_path}/oldlog/test-%d{yyyy-MM-dd}-%i.log">
            <!-- onMatch="ACCEPT" :级别在info之上则接受，onMismatch="DENY" :级别在info之下则拒绝 -->
            <Filters>
                <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout charset="UTF-8" pattern="[%d][%p][%t][%X{traceId}][%C:%L] %m%n"/>
            <!-- Policies :日志滚动策略-->
            <Policies>
                <!-- 归档每天的文件 -->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <TimeBasedTriggeringPolicy/>
                <!-- 限制单个文件大小 -->
                <SizeBasedTriggeringPolicy size="${EVERY_FILE_SIZE}"/>
            </Policies>
        </RollingFile>

        <!-- 只输出 info  -->
        <RollingFile name="RollingFileInfo" fileName="${log_path}/info.${log_suffix}"
                     filePattern="${log_path}/oldlog/info-%d{yyyy-MM-dd}-%i.log">
            <!-- onMatch="ACCEPT" :级别在info之上则接受，onMismatch="DENY" :级别在info之下则拒绝 -->
            <Filters>
                <ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout charset="UTF-8" pattern="[%d][%p][%t][%X{traceId}][%C:%L] %m%n"/>
            <!-- Policies :日志滚动策略-->
            <Policies>
                <!-- 归档每天的文件 -->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <TimeBasedTriggeringPolicy/>
                <!-- 限制单个文件大小 -->
                <SizeBasedTriggeringPolicy size="${EVERY_FILE_SIZE}"/>
            </Policies>
        </RollingFile>

        <!-- 只输出 error  -->
        <RollingFile name="RollingFileError" fileName="${log_path}/error.${log_suffix}"
                     filePattern="${log_path}/oldlog/error-%d{yyyy-MM-dd}-%i.log">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout charset="UTF-8" pattern="[%d][%p][%t][%X{traceId}][%C:%L] %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="1${EVERY_FILE_SIZE}"/>
            </Policies>
        </RollingFile>
    </appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
    <loggers>
        <!-- Root节点用来指定项目的根日志，如果没有单独指定Logger，那么就会默认使用该Root日志输出 -->
        <root level="ALL">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="RollingFileInfo"/>
            <AppenderRef ref="RollingFileError"/>
        </root>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息 -->
        <logger name="org.springframework" level="INFO"/>
        <logger name="org.mybatis" level="DEBUG"/>
        <logger name="cn.timebusker.util" level="INFO">
            <AppenderRef ref="RollingFileInfo"/>
        </logger>
        <!-- 按照路径过滤
        <logger name="com.dental.controller" level="INFO">
            <AppenderRef ref="test" />
        </logger>
        -->
    </loggers>
</configuration>